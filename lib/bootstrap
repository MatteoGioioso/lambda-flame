#!/bin/sh
set -eo pipefail

echo "[LAMBDA FLAME] Starting custom runtime..."

if [ -z "$NODE_RUNTIME_PATH" ]; then
  export NODE_RUNTIME_PATH=/opt/nodejs/node
fi

if [ -n "$AWS_LAMBDA_FUNCTION_MEMORY_SIZE" ]; then
  new_space=$(($AWS_LAMBDA_FUNCTION_MEMORY_SIZE / 10))
  semi_space=$((new_space / 2))
  old_space=$((AWS_LAMBDA_FUNCTION_MEMORY_SIZE - new_space))
  MEMORY_ARGS=(
    "--max-semi-space-size=$semi_space"
    "--max-old-space-size=$old_space"
  )
fi

export LAMBDA_FLAME_OUTPUT=lambda-flame-output

mkdir /tmp/"$LAMBDA_FLAME_OUTPUT"

collect() {
  $NODE_RUNTIME_PATH --prof-process --preprocess -j /tmp/"$LAMBDA_FLAME_OUTPUT"/isolate*.log >> /tmp/"$LAMBDA_FLAME_OUTPUT"/isolate-output.json
  $NODE_RUNTIME_PATH /opt/nodejs/Collector.js
}

export NODE_PATH=/var/task/node_modules:/var/node_modules:/node_modules:/opt/nodejs/node_modules:/var/runtime:/var/task:/var/runtime/node_modules:/opt/node/node_modules
"$NODE_RUNTIME_PATH" --prof --logfile=/tmp/"$LAMBDA_FLAME_OUTPUT"/lambda.log --expose-gc "${MEMORY_ARGS[@]}" /opt/nodejs/index.js

trap collect EXIT
